@page "/employee-list"
@using Gestion_Bunny.Services
@using Gestion_Bunny.Modeles
@inject IUserService UserService
@inject PageTitleService TitleService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="pt-4 pb-2 d-flex justify-content-between align-items-center">
    <div class="d-flex">
        <label class="me-2 fw-bold">Filtrer :</label>
        <div class="position-relative">
            <select class="form-select form-select-sm" @bind="selectedFilter">
                <option value="Tous">Tous</option>
                <option value="Actifs">Actifs</option>
                <option value="Inactifs">Inactifs</option>
            </select>
            <span class="position-absolute top-50 end-0 translate-middle-y me-3">
                <i class="fas fa-chevron-down"></i>
            </span>
        </div>
    </div>

    <div class="icon-container plus-container" @onclick="@(() => Navigation.NavigateTo("/employee"))">
        <img class="plus" src="images/plus.svg" alt="Ajouter" />
    </div>
</div>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>Actions</th>
                    <th>Nom</th>
                    <th>Email</th>
                    <th>Date de naissance</th>
                    <th>Actif/Inactif</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in GetFilteredUsers())
                {
                    <tr>
                        <td>
                            <!-- Bouton Voir Détails -->
                            <div class="icon-container" @onclick="@(() => Navigation.NavigateTo($"/employee-detail/{user.Id}"))">
                                <img src="images/box-arrow-right.svg" alt="Voir détails" />
                            </div>

                            <!-- Bouton Modifier -->
                            <div class="icon-container" @onclick="@(() => Navigation.NavigateTo($"/employee/{user.Id}"))">
                                <img src="images/pencil-square.svg" alt="Modifier" />
                            </div>

                            <!-- Bouton Supprimer -->
                            <div class="icon-container" @onclick="() => HandleDeleteAction(user.Id)">
                                <img src="images/trash.svg" alt="Supprimer" />
                            </div>
                        </td>

                        <td>@user.GetFullName()</td>
                        <td>@user.Email</td>
                        <td>@(user.Employee?.BirthDate.HasValue == true ? user.Employee.BirthDate.Value.ToShortDateString() : "Non renseigné")</td>
                        <td>@(user.IsDeleted ? "❌" : "✅")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
   
}

@code {

    private List<User>? users;
    private User? selectedUser;
    private string selectedFilter = "Tous";

    protected override async Task OnInitializedAsync()
    {
        TitleService.Title = "Liste d'employés";
        users = await UserService.GetUsersAsync();
    }

    private void HandleDeleteAction(int userId)
    {
        UserService.DeleteUserAsync(userId);
    }

    private List<User> GetFilteredUsers()
    {
        return selectedFilter switch
        {
            "Actifs" => users?.Where(u => !u.IsDeleted).ToList() ?? new List<User>(),
            "Inactifs" => users?.Where(u => u.IsDeleted).ToList() ?? new List<User>(),
            _ => users ?? new List<User>()
        };
    }
}
