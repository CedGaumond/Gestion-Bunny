@page "/change-password"
@using Gestion_Bunny.Modeles
@using Gestion_Bunny.Services
@inject IAuthenticationService AuthenticationService
@inject AuthenticationState AuthState
@inject IUserService UserService
@inject NavigationManager Navigation

<PageTitle>Changer le mot de passe</PageTitle>
<div class="login-page">
    <div class="login-overlay"></div>
    
    <div class="login-container">
        <img src="images/logo.png" alt="Logo" class="login-logo" />
        <div class="login-form">
            <EditForm Model="@changePasswordModel" OnValidSubmit="HandlePasswordChange">
                <div class="password-rules mt-3 mb-3 ms-3">
                    <p><strong>Le mot de passe doit respecter les critères suivants :</strong></p>
                    <ul>
                        <li class="success">Au moins 8 caractères</li>
                        <li class="success">Contenir au moins une majuscule</li>
                        <li class="failed">Contenir au moins une minuscule</li>
                        <li class="success">Contenir au moins un chiffre</li>
                    </ul>
                </div>
                <div class="form-group mb-4">
                    <label for="NewPassword" class="form-label fs-5">Nouveau mot de passe</label>
                    <InputText id="NewPassword" type="password" class="form-control" @bind-Value="changePasswordModel.NewPassword" />
                    <ValidationMessage For="@(() => changePasswordModel.NewPassword)" />
                </div>
                <div class="form-group mb-4">
                    <label for="ConfirmPassword" class="form-label fs-5">Confirmer le mot de passe</label>
                    <InputText id="ConfirmPassword" type="password" class="form-control" @bind-Value="changePasswordModel.ConfirmPassword" />
                    <ValidationMessage For="@(() => changePasswordModel.ConfirmPassword)" />
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-primary">Changer le mot de passe</button>
                </div>

                @if (changePasswordError)
                {
                    <div class="alert alert-danger mt-3">Les mots de passe ne correspondent pas ou ne respectent pas les critères de sécurité.</div>
                }
            </EditForm>
        </div>
    </div>
</div>

@code {
    private ChangePasswordModel changePasswordModel = new ChangePasswordModel();
    private bool changePasswordError = false;

    private async Task HandlePasswordChange()
    {
        changePasswordError = false;

        if (changePasswordModel.NewPassword != changePasswordModel.ConfirmPassword)
        {
            changePasswordError = true;
            return;
        }

        if (!IsValidPassword(changePasswordModel.NewPassword))
        {
            changePasswordError = true;
            return;
        }

        UserService.UpdatePassword(AuthState.CurrentUser, changePasswordModel.NewPassword);

        Navigation.NavigateTo("/home");
    }

    private bool IsValidPassword(string password)
    {
        var hasUpperCase = password.Any(char.IsUpper);
        var hasLowerCase = password.Any(char.IsLower);
        var hasDigit = password.Any(char.IsDigit);
        var hasMinimumLength = password.Length >= 8;

        return hasUpperCase && hasLowerCase && hasDigit && hasMinimumLength;
    }
}
